name: Comment Cloudflare Build Info

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  comment-cloudflare-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Get branch name
        id: vars
        run: |
          BRANCH_NAME="${GITHUB_REF##*/}"
          echo "BRANCH_NAME=${BRANCH_NAME}" >> "$GITHUB_OUTPUT"

      - name: Get Cloudflare Pages Deployments
        id: deployments
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          ACCOUNT_ID="e7a03fc03aeaa08315f86fee631448f6"
          PROJECT_NAME="cans2025-website"
          BRANCH="${{ steps.vars.outputs.BRANCH_NAME }}"
          
          echo "Fetching deployments for branch: $BRANCH"

          DEPLOY_INFO=$(curl -s -X GET "https://api.cloudflare.com/client/v4/accounts/$ACCOUNT_ID/pages/projects/$PROJECT_NAME/deployments" \
            -H "Authorization: Bearer $CLOUDFLARE_API_TOKEN")

          echo "DEPLOY_INFO=$DEPLOY_INFO"  # ãƒ‡ãƒ—ãƒ­ã‚¤æƒ…å ±ã‚’è¡¨ç¤º

          DEPLOY_URL=$(echo "$DEPLOY_INFO" | jq -r \
            --arg BR "$BRANCH" \
            '.result[] | select(.deployment_trigger.metadata.branch == $BR) | .url' | head -n 1)

          echo "DEPLOY_URL=$DEPLOY_URL" >> "$GITHUB_OUTPUT"

      - name: Comment on PR
        if: steps.deployments.outputs.DEPLOY_URL != ''
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const url = `${{ steps.deployments.outputs.DEPLOY_URL }}`;
            const pr = context.payload.pull_request.number;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr,
              body: `âœ… Cloudflare Pages Preview:\nðŸ”— [${url}](${url})`
            });
